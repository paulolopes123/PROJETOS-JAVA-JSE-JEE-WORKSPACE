package controle;

import dominio.DadosException;
import dominio.Prova;
import face.JanelaElaborarProva;
import face.JanelaPrincipalProfessor;

public class CtrlElaborarProva {
	//
	// ATRIBUTOS
	//
	public enum Status {
		EmElaboracao, Pronta;

		public static void validarTransicaoStatus(Status anterior, Status novo) throws ControleException {
			if (anterior == null && novo == EmElaboracao || anterior == EmElaboracao && novo == Pronta
					|| anterior == Pronta)
				return;
			throw new ControleException(new ErroDeControle(1, "Não se pode sair do estado "
					+ (anterior == null ? "NULO" : anterior) + " e ir para o estado " + novo));
		}
	}

	/**
	 * Referência para o controlador do programa.
	 */
	private final CtrlPrograma ctrlPrg;

	/**
	 * Referência para a janela elaborar Prova
	 */
	private JanelaElaborarProva jElaborarProva;
	
	private JanelaIncluirQuestao jIncluirQuestao;

	/**
	 * Referência para o objeto Prova sendo manipulado
	 */
	private Prova atual;

	/**
	 * Atributo que indica qual operação está em curso
	 */
	private Status status;
	
	

	//
	// MÉTODOS
	//

	/**
	 * Construtor da classe CtrlElaborarProva
	 */
	
	public CtrlElaborarProva(CtrlPrograma p) throws ControleException, DadosException {
		// Guardo a referência para o controlador do programa
		this.ctrlPrg = p;
		// Iniciando o caso de uso
		this.iniciar();
	}
	

	public void iniciar() throws ControleException, DadosException {
		// Crio e abro a janela de elaboração da prova
		this.jElaborarProva = new JanelaElaborarProva(this);
		
		// Não há Prova em manipulação
		this.atual = null;
		// Informo que o controlador de caso de uso está disponível
		this.setStatus(Status.EmElaboracao);
	}
	public void incluirQuestao() throws ControleException, DadosException {
		// Crio e abro a janela de elaboração da prova
		this.jIncluirQuestao = new JanelaIncluirQuestao(this);
	

	public void terminar() throws ControleException {
		if (this.status == Status.Pronta)
			return;
		// Não há Prova em manipulação
		this.atual = null;
		// Fecho a janela
		this.jElaborarProva.setVisible(false);
		// Informo que o controlador está encerrado
		this.setStatus(Status.Pronta);
		// Notifico ao controlador do programa o término do caso de uso
	}

	public Status getStatus() {
		return this.status;
	}

	/**
	 * 
	 * @param novo
	 * @throws ControleException
	 */
	public void setStatus(Status novo) throws ControleException {
		Status.validarTransicaoStatus(this.status, novo);
		this.status = novo;
	}
}
