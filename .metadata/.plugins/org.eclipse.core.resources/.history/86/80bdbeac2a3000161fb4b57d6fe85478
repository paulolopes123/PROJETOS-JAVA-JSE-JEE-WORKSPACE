package controle;

import java.util.Scanner;

import dominio.ArvoreBinariaBusca;

/*
 * Escreva uma aplicação Java que contenha uma árvore binária de busca cujos nós guardarão,
 *  além das referências para o filho esquerdo e o filho direito, apenas um valor inteiro.
 *   Forneça um método inserir() que permitirá inserir os valores na árvore. Em seguida forneça
 *    um método recursivo que permitirá fazer a travessia in-order da árvore.
 * 
 * 
 * 
 */
public class ProgramaPrincipal {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner entrada = new Scanner(System.in);
		// vamos criar um novo objeto da classe ArvoreBinariaBusca
		ArvoreBinariaBusca arvore = new ArvoreBinariaBusca();
		// vamos inserir 5 valores na árvore
		for (int i = 0; i <= 4; i++) {
			System.out.println("Informe um valor inteiro:");
			int valor = entrada.nextInt();
			// vamos inserir o nó e verificar o sucesso da operação
			if (!arvore.inserir(valor)) {
				System.out.println("Não foi possível inserir. Um elemento já contém este valor.");

			} else {
				System.out.println("Valor inserido com sucesso!!");

			}
		}

		// vamos exibir os nós da árvore usando o percurso em-ordem
		System.out.println("\nPercurso em-ordem");
		arvore.emOrdem();
		System.out.println("\n");

		// vamos exibir os nós da árvore usando o percurso pre-ordem
		System.out.println("\nPercurso em-ordem");
		arvore.preOrdem();
		System.out.println("\n");

		// vamos exibir os nós da árvore usando o percurso pos-ordem
		System.out.println("\nPercurso em-ordem");
		arvore.posOrdem();
		System.out.println("\n");

	}

}
