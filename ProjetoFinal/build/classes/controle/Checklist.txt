-----------------------------------------------------------------------------------------------------------------------
1) Crie a classe CtrlPrograma. O método main deverá estar nesta classe e deverá instanciar um objeto CtrlPrograma e 
iniciar a execução do programa.


-----------------------------------------------------------------------------------------------------------------------
2) Os atributos que o CtrlPrograma deverá apresentar são: 
	- 1 atributo para cada controlador de caso de uso
	- 1 atributo para referenciar a janela principal
	
-----------------------------------------------------------------------------------------------------------------------
3) Os métodos presentes no CtrlPrograma deverão ser:
	- Construtor: deverá instanciar os controladores de caso de uso
	- public void iniciar: deverá apresentar a janela principal (guardando a referência para esta no atributo) e
	                       executar os procedimentos de recuperação da serialização
	- public void terminar: executar os procedimentos de serialização	
	- 1 método para iniciar cada caso de uso
	- 1 método para finalizar cada caso de uso	

-----------------------------------------------------------------------------------------------------------------------
4) Os controladores de caso de uso deverá ter um enumerado com os estados aos quais ele possa estar

Ex: 		
	public enum Status {
		DISPONIVEL, INCLUINDO, EXCLUINDO, ALTERANDO, ENCERRADO;

		public static void validarTransicaoStatus(Status anterior, Status novo) throws ControleException {
			if(anterior == null && novo == DISPONIVEL || 
			   anterior == DISPONIVEL && novo == INCLUINDO  || 
			   anterior == DISPONIVEL && novo == EXCLUINDO  ||
			   anterior == DISPONIVEL && novo == ALTERANDO  ||
			   anterior == DISPONIVEL && novo == ENCERRADO  ||
			   anterior == INCLUINDO  && novo == DISPONIVEL ||
			   anterior == EXCLUINDO  && novo == DISPONIVEL ||
			   anterior == ALTERANDO  && novo == DISPONIVEL)
				return;
			throw new ControleException(new ErroDeControle(1, "Não se pode sair do estado " + (anterior==null?"NULO":anterior) + " e ir para o estado " + novo));
		}
	}
	
-----------------------------------------------------------------------------------------------------------------------
5) Os controladores de caso de uso deverá ter os seguintes atributos

	- referência para o CtrlPrograma (deve ser obtida no construtor do ctrl do caso de uso)
	
			private CtrlPrograma       ctrlPrg;
	
	- referência para cada elemento de interface gráfica com a qual irá interagir. PROCURE SEMPRE UTILIZAR interface AO 
	INVÉS DA CLASSE.

			private IViewerCadastroEmpregados 	jCadastro;
			private IViewerEmpregado 			jEmpregado;
	
	- referência para a Operação em execução (objeto do enumerado)	
		
			private Status status;	
	
	- Em geral, será necessário ter um atributo para cada DAO com o qual irá interagir e para o objeto de dados que 
	está sendo manipulado  
	
			private IDAO<Projeto> dao = (IDAO<Projeto>)DAO.getDAO(Projeto.class);
			private Projeto atual;
			
-----------------------------------------------------------------------------------------------------------------------
6) Os controladores de caso de uso deverá ter os seguintes métodos

	- Construtor: deve receber a referência para o CtrlPrograma para guardá-la no seu atributo
	- public boolean iniciar(): inicia a execução do caso de uso	
	- public boolean terminar(): termina a execução do caso de uso
	
	- Para cada estado do caso de uso, colocar um método de tratamento do estado.
	
		(Exemplos do CtrlManterEmpregados)
	
		public boolean iniciarIncluir() 
		public void cancelarIncluir() 
		public boolean incluir(String sigla, String nome, Object depto) throws DadosException {
		public boolean iniciarAlterar(int pos) 
		public void cancelarAlterar()
		public boolean alterar(String cpf, String nome, Object depto) throws DadosException 
		public boolean iniciarExcluir(int pos) 
		public void cancelarExcluir() 
		public boolean excluir() 
	
	- Também pode ser útil ter um método que atualize o estado da interface gráfica com o usuário
		public void atualizarInterface(){

		
-----------------------------------------------------------------------------------------------------------------------
7) Para cada controlador, gere uma interface que indique quais métodos estão presentes. SIGA A REGRA GERAL: SE HÁ 
COMUNICAÇÂO ENTRE OBJETOS DE CAMADAS DIFERENTES, AS REFERÊNCIAS SEMPRE DEVEM SER BASEADAS EM INTERFACES.
		